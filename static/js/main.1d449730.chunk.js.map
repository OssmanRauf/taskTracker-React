{"version":3,"sources":["components/Header.js","components/Task.js","components/Tasks.js","components/Form.js","components/Model.js","components/App.js","reportWebVitals.js","index.js"],"names":["Header","btnClick","className","onClick","Task","task","onDelete","onBell","text","reminder","id","style","cursor","color","day","Tasks","tasks","map","Form","onAdd","useState","setTask","okay","setOkay","onSubmit","e","preventDefault","role","type","placeholder","value","onChange","target","htmlFor","Date","toString","slice","checked","currentTarget","marginTop","Model","modalShow","onHide","Modal","show","size","aria-labelledby","centered","display","justifyContent","alignItems","Title","Body","App","localStorage","getItem","JSON","parse","setTasks","setModalShow","useEffect","setItem","stringify","length","filter","Math","floor","random","newTask","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1d449730.chunk.js","sourcesContent":["const Header = ({ btnClick }) => {\r\n\treturn (\r\n\t\t<div className=\"header\">\r\n\t\t\t<h1> Task tracker </h1>\r\n\t\t\t{/* when clicked show modal */}\r\n\t\t\t<button onClick={btnClick} className=\"btn btn-primary\">\r\n\t\t\t\tAdd\r\n\t\t\t</button>\r\n\t\t</div>\r\n\t);\r\n};\r\nexport default Header;\r\n","import { FaTimes, FaBellSlash, FaBell } from \"react-icons/fa\";\r\nconst Task = ({ task, onDelete, onBell }) => {\r\n\treturn (\r\n\t\t<div className=\"task\">\r\n\t\t\t<h3>\r\n\t\t\t\t{task.text}\r\n\t\t\t\t<div className=\"icons\">\r\n\t\t\t\t\t{/* check if reminder is active or not and add the proper bell icon */}\r\n\t\t\t\t\t{task.reminder === true ? (\r\n\t\t\t\t\t\t<FaBellSlash\r\n\t\t\t\t\t\t\tclassName=\"bell-icon\"\r\n\t\t\t\t\t\t\tonClick={() => onBell(task.id)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<FaBell className=\"bell-icon\" onClick={() => onBell(task.id)} />\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t<FaTimes\r\n\t\t\t\t\t\tstyle={{ cursor: \"pointer\", color: \"red\" }}\r\n\t\t\t\t\t\tclassName=\"delete-icon icon\"\r\n\t\t\t\t\t\tonClick={() => onDelete(task.id)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t</h3>\r\n\t\t\t<p>{task.day}</p>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Task;\r\n","import Task from \"./Task\";\r\nconst Tasks = ({ tasks, onDelete, onBell }) => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{/* map trough the tasks array and render a task component for each task */}\r\n\t\t\t{tasks.map((task) => (\r\n\t\t\t\t<Task key={task.id} task={task} onDelete={onDelete} onBell={onBell} />\r\n\t\t\t))}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Tasks;\r\n","import { useState } from \"react\";\r\n\r\nconst Form = ({ onAdd }) => {\r\n\tconst [task, setTask] = useState({});\r\n\tconst [okay, setOkay] = useState(true);\r\n\tconst onSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\t\tif (!task.text) {\r\n\t\t\tsetOkay(false);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tonAdd(task);\r\n\t\t//set the task back to empty object\r\n\t\tsetTask({});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<form onSubmit={onSubmit}>\r\n\t\t\t{/* check if input is not empty */}\r\n\t\t\t{!okay ? (\r\n\t\t\t\t<div className=\"alert alert-danger\" role=\"alert\">\r\n\t\t\t\t\tPlease add a task!\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t\"\"\r\n\t\t\t)}\r\n\t\t\t<div className=\"form-group\">\r\n\t\t\t\t<label>Task</label>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\tplaceholder=\"Add Task\"\r\n\t\t\t\t\tvalue={task.text}\r\n\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\tconst text = e.target.value;\r\n\t\t\t\t\t\tsetTask({ ...task, text });\r\n\t\t\t\t\t}}></input>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className=\"form-group\">\r\n\t\t\t\t<label htmlFor=\"example-datetime-local-input\">Date and time</label>\r\n\t\t\t\t<input\r\n\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\ttype=\"datetime-local\"\r\n\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\tconst day = new Date(e.target.value).toString().slice(0, 24);\r\n\t\t\t\t\t\tsetTask({ ...task, day });\r\n\t\t\t\t\t}}></input>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"form-check\">\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"checkbox\"\r\n\t\t\t\t\tclassName=\"form-check-input\"\r\n\t\t\t\t\tchecked={task.reminder}\r\n\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\tconst reminder = e.currentTarget.checked;\r\n\t\t\t\t\t\tsetTask({ ...task, reminder });\r\n\t\t\t\t\t}}></input>\r\n\t\t\t\t<label className=\"form-check-label\">Set Reminder</label>\r\n\t\t\t</div>\r\n\t\t\t<input\r\n\t\t\t\tstyle={{ marginTop: \"10px\" }}\r\n\t\t\t\ttype=\"submit\"\r\n\t\t\t\tclassName=\"btn btn-primary btn-block\"\r\n\t\t\t\tvalue=\"Add New Task\"></input>\r\n\t\t</form>\r\n\t);\r\n};\r\nexport default Form;\r\n","import { Modal } from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { FaTimes } from \"react-icons/fa\";\r\nimport Form from \"./Form\";\r\nconst Model = ({ modalShow, onHide, onAdd }) => {\r\n\treturn (\r\n\t\t<Modal\r\n\t\t\tshow={modalShow}\r\n\t\t\tsize=\"lg\"\r\n\t\t\taria-labelledby=\"contained-modal-title-vcenter\"\r\n\t\t\tcentered>\r\n\t\t\t<Modal.Header\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\tdisplay: \"flex\",\r\n\t\t\t\t\tjustifyContent: \"space-between\",\r\n\t\t\t\t\talignItems: \"center\",\r\n\t\t\t\t}}>\r\n\t\t\t\t<Modal.Title id=\"contained-modal-title-vcenter\">\r\n\t\t\t\t\tAdd New Task\r\n\t\t\t\t</Modal.Title>\r\n\t\t\t\t<FaTimes onClick={() => onHide()} style={{ cursor: \"pointer\" }} />\r\n\t\t\t</Modal.Header>\r\n\t\t\t<Modal.Body>\r\n\t\t\t\t<Form onAdd={onAdd} />\r\n\t\t\t</Modal.Body>\r\n\t\t</Modal>\r\n\t);\r\n};\r\n\r\nexport default Model;\r\n","import { useState, useEffect } from \"react\";\r\nimport Header from \"./Header\";\r\nimport Tasks from \"./Tasks\";\r\nimport Model from \"./Model\";\r\n\r\nfunction App() {\r\n\t//tasks state\r\n\tconst [tasks, setTasks] = useState(\r\n\t\tlocalStorage.getItem(\"tasks\")\r\n\t\t\t? JSON.parse(localStorage.getItem(\"tasks\"))\r\n\t\t\t: []\r\n\t);\r\n\t// modal state\r\n\tconst [modalShow, setModalShow] = useState(false);\r\n\t//storing data in local storage\r\n\tuseEffect(() => {\r\n\t\tlocalStorage.setItem(\"tasks\", JSON.stringify(tasks));\r\n\t}, [tasks]);\r\n\tconst deleteTask = (id) => setTasks(tasks.filter((task) => task.id !== id));\r\n\t// change bell icon and reminder value when user click in bell\r\n\tconst bellEvent = (id) => {\r\n\t\tsetTasks(\r\n\t\t\ttasks.map((task) =>\r\n\t\t\t\ttask.id === id ? { ...task, reminder: !task.reminder } : task\r\n\t\t\t)\r\n\t\t);\r\n\t};\r\n\tconst popupModel = () => {\r\n\t\tsetModalShow(true);\r\n\t};\r\n\tconst addTask = (task) => {\r\n\t\tconst id = Math.floor(Math.random() * 10000) + 1;\r\n\t\tconst newTask = { id, ...task };\r\n\t\tsetTasks([...tasks, newTask]);\r\n\t\tsetModalShow(false);\r\n\t};\r\n\treturn (\r\n\t\t<div className=\"conteiner\">\r\n\t\t\t<Header btnClick={popupModel} />\r\n\t\t\t{/* check if there is tasks or not, if not render a \"no task text\" */}\r\n\t\t\t{tasks.length > 0 ? (\r\n\t\t\t\t<Tasks onBell={bellEvent} onDelete={deleteTask} tasks={tasks} />\r\n\t\t\t) : (\r\n\t\t\t\t\"No Tasks\"\r\n\t\t\t)}\r\n\t\t\t<Model\r\n\t\t\t\tonAdd={addTask}\r\n\t\t\t\tmodalShow={modalShow}\r\n\t\t\t\tonHide={() => setModalShow(false)}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\nreportWebVitals();\n"],"sourceRoot":""}